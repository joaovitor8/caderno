Circuitos Digitais



## Fundamentos
### Conceitos de Circuitos e Sistemas de Numeração
* Sistemas: binário (base 2), octal (base 8), decimal (base 10), hexadecimal (base 16)
* Conversões entre bases
* Circuito digital = sinais discretos (0/1)

### Funções e Portas Lógicas
* Portas básicas: AND, OR, NOT
* Derivadas: NAND, NOR, XOR, XNOR
* Tabela verdade = definição da função

### Álgebra Booleana
* Leis: identidade, idempotência, complementaridade
* Simplificação de expressões
* Dualidade (trocar AND↔OR, 0↔1)

---
## Simplificação Lógica
### Mapa de Veitch-Karnaugh (K-Map)
* Método gráfico para simplificar expressões
* Agrupamento em potências de 2 (1,2,4,8…)
* Redução de termos → menos portas

### Quine-McCluskey
* Método tabular de simplificação
* Usado em circuitos maiores (automação via software)

---
## Circuitos Combinacionais
### Circuitos Combinacionais
* Saída depende apenas das entradas atuais
* Exemplos: multiplexador, demultiplexador, codificador, decodificador

### Circuitos Aritméticos
* Somador simples (Half Adder)
* Somador completo (Full Adder)
* Subtrator, ALU (Arithmetic Logic Unit)

---
## Circuitos Sequenciais
### Elementos de Armazenamento
* Latch: nível sensível
* Flip-Flop (SR, D, JK, T): borda de clock

### Registradores
* Conjunto de flip-flops → armazenar palavras (bits)
* Tipos: deslocamento, carga paralela

### Máquinas de Estados
* FSM (Finite State Machine) → Mealy e Moore
* Estados, transições, entradas, saídas

### Análise e Síntese de Circuitos Sequenciais
* Análise: determinar comportamento a partir do circuito
* Síntese: projetar circuito a partir da tabela de estados

### Contadores
* Sequenciais (síncronos/assíncronos)
* Up, Down, Mod-n

---
## Memória e Arquitetura
### Memórias
* RAM (volátil), ROM (não volátil)
* Flash, EEPROM
* Hierarquia: registrador → cache → RAM → disco

### Arquitetura de Computadores e Componentes Digitais
* CPU, ALU, registradores, barramentos
* Unidade de controle e fluxo de dados

### Circuitos Integrados e Dispositivos Lógicos Programáveis
* SSI, MSI, LSI, VLSI (níveis de integração)
* CPLD, FPGA (programáveis)

### Interface e Comunicação Digital
* Paralela x Serial
* Protocolos: I²C, SPI, UART
* Importância de sincronização (clock, handshaking)




## Resumindo:
* Combinacionais = lógica pura (não guarda estado)
* Sequenciais = dependem de memória/clock
* Arquitetura = integração em sistemas maiores

