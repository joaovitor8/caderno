Os tipos de dados e as instruções primitivas são fundamentais na programação, pois definem a estrutura e a manipulação das informações dentro de um programa. Um tipo de dado determina quais valores podem ser armazenados e quais operações podem ser realizadas sobre eles, enquanto as instruções primitivas são os comandos básicos oferecidos por uma linguagem de programação.

----------

Tipos de Dados
Os tipos de dados representam as diferentes formas de armazenar e manipular informações em um programa. Eles podem ser classificados em primitivos (básicos) e compostos (estruturados ou abstratos).

a) Tipos de Dados Primitivos
Os tipos de dados primitivos são os mais básicos e fundamentais. Eles variam entre linguagens de programação, mas os principais são:

Inteiro (int) - Números inteiros, positivos ou negativos, sem parte decimal. - 10, -3, 1000
Ponto Flutuante (float, double) - Números com casas decimais. O double tem maior precisão que o float. - 3.14, -0.001, 2.718
Caractere (char) - Representa um único caractere. - 'A', 'z', '9'
Booleano (bool) - Representa valores lógicos true (verdadeiro) ou false (falso). - true, false
String (cadeia de caracteres) - Sequência de caracteres (palavras e textos). - "Olá, mundo!"

b) Tipos de Dados Compostos
Além dos primitivos, existem tipos compostos que armazenam múltiplos valores:

Arrays	Coleção de elementos do mesmo tipo.	[1, 2, 3, 4]
Listas	Estruturas dinâmicas que armazenam vários elementos.	["maçã", "banana", "laranja"]
Tuplas	Estruturas imutáveis de múltiplos valores.	(1, "dois", 3.0)
Dicionários	Estrutura chave-valor.	{"nome": "Alice", "idade": 25}

----------

2. Instruções Primitivas
As instruções primitivas são comandos básicos que uma linguagem de programação oferece para realizar operações. Elas incluem entrada e saída de dados, atribuição de valores e operações aritméticas e lógicas.

a) Entrada e Saída de Dados
São usadas para obter e exibir informações.

Entrada: Captura valores do usuário.
Saída: Exibe valores na tela.

c) Operações Aritméticas
São utilizadas para realizar cálculos matemáticos.

Operador	Descrição	Exemplo (a = 10, b = 3)
+	Adição	a + b → 13
-	Subtração	a - b → 7
*	Multiplicação	a * b → 30
/	Divisão	a / b → 3.33
%	Módulo (resto da divisão)	a % b → 1

d) Operações Lógicas e Relacionais
Usadas para comparar valores e criar expressões condicionais.

Operador	Descrição	Exemplo (x = 5, y = 10)
==	Igualdade	x == y → false
!=	Diferente	x != y → true
>	Maior que	x > y → false
<	Menor que	x < y → true
>=	Maior ou igual	x >= y → false
<=	Menor ou igual	x <= y → true

----------

3. Controle de Fluxo com Instruções Primitivas
As estruturas de controle de fluxo definem a execução do programa.

a) Estruturas Condicionais (if, else)
Permitem a execução de blocos diferentes de código, dependendo de uma condição.

b) Estruturas de Repetição (loops)
Permitem a repetição de instruções.

----------

Os tipos de dados definem como as informações são armazenadas e manipuladas dentro de um programa, enquanto as instruções primitivas fornecem os comandos básicos necessários para manipular essas informações. Compreender esses conceitos é essencial para a escrita de algoritmos eficientes e o desenvolvimento de programas bem estruturados.